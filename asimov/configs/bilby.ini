{% if production.event.repository %}
{% assign repo_dir = production.event.repository.directory %}
{% else %}
{% assign repo_dir = "." %}
{% endif %}
{% assign meta = production.meta %}
{% assign sampler = production.meta['sampler'] %}
{% assign scheduler = production.meta['scheduler'] %}
{% assign likelihood = production.meta['likelihood'] %}
{% assign data = production.meta['data'] %}
{% assign quality = production.meta['quality'] %}
{% assign ifos = production.meta['interferometers'] %}
################################################################################
## Calibration arguments
################################################################################

calibration-model=CubicSpline
spline-calibration-envelope-dict={ {% for ifo in ifos %}{{ifo}}:{{data['calibration'][ifo]}},{% endfor %} }
spline-calibration-nodes=10
spline-calibration-amplitude-uncertainty-dict=None
spline-calibration-phase-uncertainty-dict=None

################################################################################
## Data generation arguments
################################################################################

ignore-gwpy-data-quality-check=True
gps-tuple=None
gps-file=None
timeslide-file=None
timeslide-dict=None
trigger-time={{ production.meta['event time'] }}
gaussian-noise=False
n-simulation=0
data-dict=None
data-format=None
channel-dict={ {% for ifo in ifos %}{{ifo}}:{{data['channels'][ifo]}},{% endfor %} }

################################################################################
## Detector arguments
################################################################################

coherence-test=False
detectors={{ ifos }}
duration={{ data['segment length'] }}
generation-seed=None
psd-dict={ {% for ifo in ifos %}{{ifo}}:{{production.psds[ifo]}},{% endfor %} }
psd-fractional-overlap=0.5
post-trigger-duration=2.0
sampling-frequency={{ likelihood['sample rate'] | round }}
psd-length={{ likelihood['psd length'] | round }}
psd-maximum-duration=1024
psd-method=median
psd-start-time=None
minimum-frequency={ {% for ifo in ifos %}{{ifo}}:{{quality['minimum frequency'][ifo]}},{% endfor %} }
maximum-frequency={ {% for ifo in ifos %}{{ifo}}:{{quality['maximum frequency'][ifo]}},{% endfor %} }
zero-noise=False
tukey-roll-off=0.4
resampling-method=lal

################################################################################
## Injection arguments
################################################################################

injection=False
injection-dict=None
injection-file=None
injection-numbers=None
injection-waveform-approximant=None

################################################################################
## Job submission arguments
################################################################################

accounting={{ scheduler['accounting group'] }}
label={{ production.name }}
local=False
local-generation=False
local-plot=False
outdir={{ production.rundir }}
periodic-restart-time=28800
request-memory=8.0
request-memory-generation=None
request-cpus={{ scheduler['request cpus'] | default: 16}}
singularity-image=None
scheduler={{ scheduler['type'] | default: "condor" }}
scheduler-args=None
scheduler-module=None
scheduler-env=None
transfer-files=False
log-directory=None
online-pe=False
osg=False

################################################################################
## Likelihood arguments
################################################################################

distance-marginalization=True
distance-marginalization-lookup-table=TD.npz
phase-marginalization=False
time-marginalization=True
jitter-time=True
reference-frame={% if production.meta['interferometers'] contains "H1" %}H1{% endif %}{% if production.meta['interferometers'] contains "L1" %}L1{% endif %}{% if production.meta['interferometers'] contains "V1" %}V1{% endif %}
time-reference=geocent
likelihood-type=GravitationalWaveTransient
roq-folder=None
roq-scale-factor=1
extra-likelihood-kwargs=None

################################################################################
## Output arguments
################################################################################

create-plots=True
plot-calibration=False
plot-corner=False
plot-marginal=False
plot-skymap=False
plot-waveform=False
plot-format=png
create-summary=False
email=None
existing-dir=None
webdir={{ config['general']['webroot'] }}/{{ production.event.name }}/{{ production.name }}
summarypages-arguments=None

################################################################################
## Prior arguments
################################################################################

deltaT=0.2
prior-file={{repo_dir}}/C01_offline/{{production.name}}.prior
convert-to-flat-in-component-mass=False

################################################################################
## Post processing arguments
################################################################################

postprocessing-executable=None
postprocessing-arguments=None
single-postprocessing-executable=None
single-postprocessing-arguments=None

################################################################################
## Sampler arguments
################################################################################

sampler={{sampler['sampler'] | default: "dynesty" }}
sampling-seed=None
n-parallel={{ sampler['threads'] | default: 4 }}
sampler-kwargs={{ sampler['sampler kwargs'] |  default: "{'nlive': 2000, 'sample': 'rwalk', 'walks': 100, 'nact': 50, 'check_point_delta_t':1800, 'check_point_plot':True}"  }} 

################################################################################
## Waveform arguments
################################################################################

waveform-generator=bilby.gw.waveform_generator.WaveformGenerator
reference-frequency={{ production.meta['likelihood']['reference frequency'] }}
waveform-approximant={{ production.meta['approximant'] }}
catch-waveform-errors=True
pn-spin-order=-1
pn-tidal-order=-1
pn-phase-order=-1
pn-amplitude-order={{ production.meta['priors']['amp order'] }}
frequency-domain-source-model=lal_binary_black_hole
