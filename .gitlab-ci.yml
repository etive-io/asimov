# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: python:3.7
stages:
- test
- build
- deploy
test-python-36:
  stage: test
  image: python:3.6
  script:
  - git config --global user.email "you@example.com"
  - git config --global user.name "Your Name"
  - pip install -r requirements.txt
  - pip install coverage
  - python setup.py install
  - python -m unittest discover tests/
test-python-37:
  stage: test
  image: python:3.7
  script:
  - git config --global user.email "you@example.com"
  - git config --global user.name "Your Name"
  - pip install -r requirements.txt
  - pip install coverage
  - python setup.py install
  - python -m unittest discover tests/
test-python-38:
  stage: test
  image: python:3.8
  script:
  - git config --global user.email "you@example.com"
  - git config --global user.name "Your Name"
  - pip install -r requirements.txt
  - pip install coverage
  - python setup.py install
  - python -m unittest discover tests/
test-python-39:
  stage: test
  image: python:3.9
  script:
    - git config --global user.email "you@example.com"
    - git config --global user.name "Your Name"
    - pip install -r requirements.txt
    - pip install coverage
    - python setup.py install
    - coverage run -m unittest discover tests/
    - coverage report | tee public/coverage.txt
    - coverage xml
  artifacts:
    paths:
      - public/coverage.txt
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
#    - coverage report -m

test-python-310:
  stage: test
  image: python:3.10
  script:
    - git config --global user.email "you@example.com"
    - git config --global user.name "Your Name"
    - pip install -r requirements.txt
    - pip install coverage
    - python setup.py install
    - python -m unittest discover tests/
#    - coverage report -m


# Build docs for multiple code versions
pages:
  stage: build
  script:
  - pip install -r docs-requirements.txt
  - pip install -r requirements.txt
  - pip install .
  - sphinx-multiversion docs/source public
  - echo "<!DOCTYPE html><html><head><title>Redirecting to master branch</title><meta
    charset=\"utf-8\"><meta http-equiv=\"refresh\" content=\"0; url=./master/index.html\">    <link
    rel=\"canonical\" href=\"https://asimov.docs.ligo.org/asimov/master/index.html\"></head></html>"
    > public/index.html
  artifacts:
    paths:
    - public
  only:
  - master
wheel-36:
  image: python:3.6
  stage: build
  script:
  - pip install wheel
  - python setup.py bdist_wheel --universal
  dependencies: []
  artifacts:
    expire_in: 3h
    paths:
    - dist
wheel-37:
  image: python:3.7
  stage: build
  script:
  - pip install wheel
  - python setup.py bdist_wheel --universal
  dependencies: []
  artifacts:
    expire_in: 3h
    paths:
    - dist
wheel-38:
  image: python:3.8
  stage: build
  script:
  - pip install wheel
  - pip install twine
  - python setup.py bdist_wheel --universal
  - twine check dist/*
  dependencies: []
  artifacts:
    expire_in: 3h
    paths:
    - dist



#   stage: test
include:
- template: Security/SAST.gitlab-ci.yml

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml  
      
# deploy:wheel:
#   stage: deploy
#   script:
#     - pip install twine
#     - twine upload dist/*
#   only:
#     #- master@daniel-williams/minke
#     - tags
#   # except:
#   #   - pushes
#   #   - web

